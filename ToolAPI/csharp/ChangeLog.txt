9th March, 2006 - Maarc
	Updated Validation Schema for MapTiles to reflect the new beta cycle

9th March, 2006 - Maarc
	Fixed some subtle order of construction errors with Scripts and ScriptSections
	Added a GetFileEnumerator() method to DefinitionCollection so that you can now progressively access all the DFNs in the tree
	Added category tracking to ScriptSection, so that getting a schema is really easy
	Added an easier way to get at a validation schema
	Updated ScriptSection so that it also strips off comments and whitespace on the tag, not just data
	Updated UOXIni and Dictionary classes so that they have a default constructor
	Updated UOXIni so that it can deal with relative paths (using the Directory() method)
	Fixed a bug in the HTML Validation Schema (TYPE and UPDATE were wrong)

4th March, 2006 - Maarc
	Added schemas for
		HOUSE and HOUSEITEM entries in house dfns
		HTML entries in html dfns
		LOCATION entries in location dfns
		TILE and MAP entries in maps dfns
		BOOK, PAGE, GUMPTEXT, GUMPMENU, MOTD, TIPS and TIP entries in misc dfns
		ESCORTS and ESCORT entries in msgboard dfns
		BESTSKILL and DEFAULT entries in newbie dfns
		ORE_LIST, SKILL and ORE entries in skills dfns
		REGIONSPAWN entries in spawn dfns
		SPELL entries in spells dfns
		SKILL, PROWESS, FAME and MURDERER entries in titles dfns
		WEATHERAB entries in weather dfns

	The only schemas missing are for
		Advance
		Create
		Items
		Harditems
		NPCs
		Menus

4th March, 2006 - Maarc
	Added a validation scheme for trying to validate the format of a ScriptSection
	Please note that this does not validate that the data you put in is useful!  It only validates that it subscribes to the right syntax
	Essentially, it will allow you to find any bad/wrong tags, find any values that are the wrong type (eg string instead of number), and so on
	This does not stop, for example, of you using say, a GET tag that points to a non-existent section (it only checks to see that it is a valid syntax)
	Early schemas are in for:
		RANDOMCOLOR entries in colors dfn
		CARVE entries in carve dfns
		COMMANDLEVELS, COMMAND_OVERRIDE and actual command entries in command dfns
		CREATURE entries in creature dfns
		RACE entries in race dfns
		REGION, MIDILIST and INSTALOG entries in regions dfns
		REGIONSPAWN entries in spawn dfns

	Some basic test driver code to see how it works

	UOXData.Script.DefinitionTree dfnTree					= new UOXData.Script.DefinitionTree( dfnPath );
	UOXData.Script.ScriptSection mSect						= dfnTree.FindEntry( "CARVE 1", UOXData.Script.DFN_Categories.carve );
	UOXData.Script.Validation.Schemas.BaseSchema mSchema	= UOXData.Script.DefinitionTree.ValidationSchema( UOXData.Script.DFN_Categories.carve, mSect.SectionName );
	ArrayList errorLog										= new ArrayList();
	if( mSchema != null )
		mSchema.ValidateSection( mSect, errorLog );
	foreach( UOXData.Script.Validation.ValidateError ve in errorLog )
	{
		txtPackageDetails.Text += ve.ErrorMessage + " - " + ve.ExpectedType + " - " + ve.Tag + " - " + ve.Value + System.Environment.NewLine;
	}


3rd March, 2006 - Maarc
	Added ToInt32( byte[] toConvert, int offset ) and ToUInt32( byte[] toConvert, int offset ) to the Conversion class
	Added automatic parsing of a book's serial from the filename, if it's constructed via a filename
	Exposed the book's Serial, Title, Author, NumPages and Pages as properties
	Added basic classes to parse message boards.  This is done through MessageBoardScript and MessageBoardSection.
	Added basic constructor to Section() that accepts just a StreamReader
	Added functionality to be able to set the line of a page of a book through indexing
	Hid Sections from ClassicBookScript and MessageBoardScript
	Updated TrimCommentAndWhitespace to remove NULLs
	Added a TrimTrailingWhitespace command (in the event we don't want to actually trim a comment)

	Some basic test driver code for message boards

	foreach( string s in sList )
	{
		UOXData.Script.MessageBoardScript mBook	= new UOXData.Script.MessageBoardScript( s );
		txtPackageDetails.Text					+= "Serial " + UOXData.Conversion.ToHexString( mBook.Serial ) + " - Posts " + mBook.Posts.Count + System.Environment.NewLine;
		int threadCounter						= 0;
		foreach( UOXData.Script.MessageBoardSection mbs in mBook.Posts )
		{
			txtPackageDetails.Text += "Thread " + threadCounter++ + System.Environment.NewLine;
			txtPackageDetails.Text += "=======" + System.Environment.NewLine;
			txtPackageDetails.Text += "Subject: " + mbs.Subject + System.Environment.NewLine;
			txtPackageDetails.Text += "Poster : " + mbs.Poster + System.Environment.NewLine;
			txtPackageDetails.Text += "Time   : " + mbs.Time + System.Environment.NewLine;
			txtPackageDetails.Text += "Toggle : " + mbs.Toggle + System.Environment.NewLine;
			txtPackageDetails.Text += "Region : ";
			txtPackageDetails.Text += mbs.PostLocation.ToString() + System.Environment.NewLine;
			txtPackageDetails.Text += "Lines  : " + mbs.NumLines + System.Environment.NewLine;
			for( int i = 0; i < mbs.NumLines; ++i )
				txtPackageDetails.Text += ((string)mbs.Lines[i]) + System.Environment.NewLine;
		}
	}


3rd March, 2006 - Maarc
	Added Save() routines to ClassicBookScript and ClassicBookSection, and validated them against test books
	Adjusted some protection levels on some functions
	Added ToByteArray() functions that accept int/uint, short/ushort, or string, and chunk out a byte array of a particular length

3rd March, 2006 - Maarc
	Added a ToString() function to Conversion.  It takes either a byte[] or char[] and returns a valid string
	Added InternalReset() functionality to the BaseScript and Section classes.  This allows pre-retrieval resetting of vars for constructed objects (child classes override as necessary)
	Updated and tested the ClassicBookScript and ClassicBookSection classes.  They now read a valid book/pages, but currently does *not* write out!  Saving of books is currently unimplemented
	Added indexing capabilities to ClassicBookScript and ClassicBookSection, as well as hiding some unnecessary functions
	The indexing ensures that a valid page/line is selected (if it doesn't, it returns NULL)
	Look at the basic test driver code below to see how

	Some basic test driver code for books

	foreach( string s in Directory.GetFiles( dirSect.FindTag( "BOOKSDIRECTORY" ), "*.bok" ) )
	{
		UOXData.Script.ClassicBookScript mBook	= new UOXData.Script.ClassicBookScript( s );
		txtPackageDetails.Text			+= mBook.Title + " - " + mBook.Author + System.Environment.NewLine;
		for( int i = 0; i < mBook.NumPages; ++i )
		{
			txtPackageDetails.Text += "Page " + (i+1) + System.Environment.NewLine;
			txtPackageDetails.Text += "=======" + System.Environment.NewLine;
			for( int j = 0; j < 8; ++j )
			{
				// Indexing accessing to a page.  mBook[i] is page i of the book mBook
				UOXData.Script.ClassicBookSection mSection = mBook[i];
				// Indexing accessing to a line.  mSection[j] is the line j of the page mSection
				txtPackageDetails.Text += mSection[j] + System.Environment.NewLine;
			}
		}
	}


2nd March, 2006 - Maarc
	Added a basic ClassicBookScript and ClassicBookSection class.  Note that this is *incomplete*, and requires testing against real data (which I don't have at the moment).
	Added a very basic DictionaryScript and UOXIni class.  They are a subclass of Script, with no additional information.  Essentially, they just *are* normal Scripts, but this way, we can conceptualise it a bit better.

1st March, 2006 - Maarc
	Added a AccountScript and AccountSection class, for dealing with Accounts files
	Fixed a possible bug with script parsing that only became apparent with AccountScript (if the delimiter appeared more than once, we weren't adding it in properly for the value part)
	Added an AddSection routine to BaseScript, so one you create you can readily add in


28th February, 2006 - Maarc
	Updated DefinitionTree so you can get a Collection based on the DFN Category you want (GetCollection() method)
	Added empty constructors for BaseScript(), WorldFile90() and Script(), so that we can create empty ones for populating later (not forced reads)

24th February, 2006 - Maarc
	Added SpawnRegion.cs, DefinitionCollection.cs, and DefinitionTree.cs
	Updated TownRegion parsing code so that it parsees a WorldSection and a ScriptSection separately
	DefinitionContainer = all the definitions dealing with a particular category of DFN
	DefinitionTree = one DefinitionContainer per DFN Cat collection

	eg code for DefinitionTree

		UOXData.Script.DefinitionTree dfnTree = new UOXData.Script.DefinitionTree( dfnPath );
		UOXData.Script.ScriptSection mSect = dfnTree.FindEntry( "RACE 1", UOXData.Script.DFN_Categories.race );
		if( mSect != null )
			System.Windows.Forms.MessageBox.Show( "Hooray!  Race found" );


21st February, 2006 - Maarc
	Updated the ToolAPI so that it now reads/parses TownRegions, from either a worldfile or dfn file